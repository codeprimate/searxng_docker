services:
  redis:
    image: redis:7-alpine
    container_name: searxng-redis
    command: redis-server --save 30 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - searxng
    restart: unless-stopped

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    ports:
      - "${SEARXNG_PORT}:${SEARXNG_PORT}"
    volumes:
      - ./searxng:/etc/searxng:rw
    environment:
      - SEARXNG_PROTOCOL=${SEARXNG_PROTOCOL}
      - SEARXNG_HOST=${SEARXNG_HOST}
      - SEARXNG_PORT=${SEARXNG_PORT}
      - GRANIAN_PORT=${SEARXNG_PORT}
      - SEARXNG_BASE_URL=${SEARXNG_BASE_URL}
      - SEARXNG_SECRET_KEY=${SEARXNG_SECRET_KEY}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    networks:
      - searxng
    restart: unless-stopped

  searxng-mcp:
    build: ./mcp-server
    container_name: searxng-mcp
    ports:
      - "${SEARXNG_MCP_PORT}:${SEARXNG_MCP_PORT}"
    environment:
      - SEARXNG_PROTOCOL=${SEARXNG_PROTOCOL}
      - SEARXNG_HOST=searxng
      - SEARXNG_PORT=${SEARXNG_PORT}
      - PORT=${SEARXNG_MCP_PORT}
    depends_on:
      - searxng
    networks:
      - searxng
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SEARXNG_MCP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis-data:

networks:
  searxng:
    driver: bridge
